/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface LazyLoad {
    'alt': string;
    'bg': boolean;
    'initcolor': string;
    'src': string;
    'styling': string;
  }
  interface PLoader {
    'alt': string;
    'bg': boolean;
    'highres': string;
    'initcolor': string;
    'lowres': string;
    'styling': string;
  }
}

declare global {


  interface HTMLLazyLoadElement extends Components.LazyLoad, HTMLStencilElement {}
  var HTMLLazyLoadElement: {
    prototype: HTMLLazyLoadElement;
    new (): HTMLLazyLoadElement;
  };

  interface HTMLPLoaderElement extends Components.PLoader, HTMLStencilElement {}
  var HTMLPLoaderElement: {
    prototype: HTMLPLoaderElement;
    new (): HTMLPLoaderElement;
  };
  interface HTMLElementTagNameMap {
    'lazy-load': HTMLLazyLoadElement;
    'p-loader': HTMLPLoaderElement;
  }
}

declare namespace LocalJSX {
  interface LazyLoad extends JSXBase.HTMLAttributes<HTMLLazyLoadElement> {
    'alt'?: string;
    'bg'?: boolean;
    'initcolor'?: string;
    'src'?: string;
    'styling'?: string;
  }
  interface PLoader extends JSXBase.HTMLAttributes<HTMLPLoaderElement> {
    'alt'?: string;
    'bg'?: boolean;
    'highres'?: string;
    'initcolor'?: string;
    'lowres'?: string;
    'styling'?: string;
  }

  interface IntrinsicElements {
    'lazy-load': LazyLoad;
    'p-loader': PLoader;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


